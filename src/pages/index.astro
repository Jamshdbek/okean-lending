---
import Layout from "../layouts/Layout.astro";
import Header from "../components/Header.astro";
---

<Layout
  title="Okean IU - React UI lab."
>
  <Header />

  <main>
    <section class="hero">
      <div class="hero-content">
        <h1>Okean <span class="react-text">React</span> UI lablary</h1>
        <p>
          Block ads. Save data. And get way faster webpages. Just by switching
          your browser.
        </p>
        <button class="button" onclick="onCopyMe()">
          <span style="font-family:monospace"> npm i okean-ui </span>
          <span>
            <svg
              xml:space="preserve"
              style="enable-background:new 0 0 512 512"
              viewBox="0 0 6.35 6.35"
              y="0"
              x="0"
              height="20"
              width="20"
              xmlns:xlink="http://www.w3.org/1999/xlink"
              version="1.1"
              xmlns="http://www.w3.org/2000/svg"
              class="clipboard"
            >
              <g>
                <path
                  fill="currentColor"
                  d="M2.43.265c-.3 0-.548.236-.573.53h-.328a.74.74 0 0 0-.735.734v3.822a.74.74 0 0 0 .735.734H4.82a.74.74 0 0 0 .735-.734V1.529a.74.74 0 0 0-.735-.735h-.328a.58.58 0 0 0-.573-.53zm0 .529h1.49c.032 0 .049.017.049.049v.431c0 .032-.017.049-.049.049H2.43c-.032 0-.05-.017-.05-.049V.843c0-.032.018-.05.05-.05zm-.901.53h.328c.026.292.274.528.573.528h1.49a.58.58 0 0 0 .573-.529h.328a.2.2 0 0 1 .206.206v3.822a.2.2 0 0 1-.206.205H1.53a.2.2 0 0 1-.206-.205V1.529a.2.2 0 0 1 .206-.206z"
                ></path>
              </g>
            </svg>
          </span>
        </button>
      </div>
      <div class="features-grid">
        <div class="feature">
          <h3>Modern Buttons</h3>
          <p>Costume Optimization.</p>
        </div>
        <div class="feature">
          <h3>AI assistant</h3>
          <p>Change Your Component width AI.</p>
        </div>
        <div class="feature">
          <h3>Powerful Change and Tailwind css!</h3>
          <p>Simple ui and use.</p>
        </div>
      </div>
    </section>
  </main>
</Layout>
<script>
  const buttons = document.querySelectorAll("button");
  buttons.forEach((button) => {
    button.addEventListener("click", () => onCopyMe());
  });
  function onCopyMe() {
    const text = "npm i okean-ui";
    navigator.clipboard
      .writeText(text)
      .catch((err) => console.error("Error copy ðŸ˜”", err));
  }
</script>
<style>
  @font-face {
    font-family: "CustomMono";
    src:
      url("/fonts/CustomMono.woff2") format("woff2"),
      url("/fonts/CustomMono.ttf") format("truetype");
    font-weight: normal;
    font-style: normal;
  }
  main {
    margin-top: 22px;
  }
  .hero {
	padding-top: 70px;
    background: var(--background-light);
    padding: 6rem 2rem;
    position: relative;
    overflow: hidden;
  }
  .react-text {
    color: grey;
    opacity: 0.6;
  }
  .hero::before {
    content: "OKEAN";
    position: absolute;
    font-size: 30rem;
    font-weight: 700;
    opacity: 0.03;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    white-space: nowrap;
    pointer-events: none;
  }
  .hero-content {
    max-width: 1400px;
    margin: 0 auto;
    text-align: center;
    position: relative;
    z-index: 1;
  }
  h1 {
    font-size: 5rem;
    line-height: 1.1;
    margin-bottom: 1.5rem;
    font-weight: 700;
    color: var(--text-primary);
  }
  .hero p {
    font-size: 1.5rem;
    margin-bottom: 2.5rem;
    color: var(--text-secondary);
    max-width: 800px;
    margin-left: auto;
    margin-right: auto;
  }
  .features-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2rem;
    max-width: 1400px;
    margin: 4rem auto 0;
  }
  .feature {
    background: white;
    padding: 2rem;
    border-radius: 12px;
    border: 1px solid rgba(0, 0, 0, 0.1);
  }
  .feature h3 {
    font-size: 1.5rem;
    margin-bottom: 0.5rem;
    color: var(--text-primary);
  }
  .feature p {
    color: var(--text-secondary);
    font-size: 1.125rem;
    line-height: 1.5;
  }

  /* button */
  .button {
    margin: auto;
    position: relative;
    transition: all 0.3s ease-in-out;
    box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.2);
    padding-block: 0.5rem;
    padding-inline: 1.25rem;
    background-color: rgb(54, 54, 56);
    border-radius: 9999px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #ffff;
    gap: 10px;
    font-weight: bold;
    border: 3px solid #ffffff4d;
    outline: none;
    overflow: hidden;
    font-size: 15px;
    cursor: pointer;
  }

  .icon {
    width: 24px;
    height: 24px;
    transition: all 0.3s ease-in-out;
  }

  .button:hover {
    transform: scale(1.05);
    border-color: #fff9;
  }

  .button:hover .icon {
    transform: translate(4px);
  }

  .button:hover::before {
    animation: shine 1.5s ease-out infinite;
  }

  .button::before {
    content: "";
    position: absolute;
    width: 100px;
    height: 100%;
    background-image: linear-gradient(
      120deg,
      rgba(255, 255, 255, 0) 30%,
      rgba(255, 255, 255, 0.8),
      rgba(255, 255, 255, 0) 70%
    );
    top: 0;
    left: -100px;
    opacity: 0.6;
  }

  .copy {
    box-sizing: border-box;
    width: var(--button-diameter);
    height: var(--button-diameter);
    border-radius: var(--button-border-radius);
    background-color: var(--button-bg);
    color: var(--button-text-color);
    border: none;
    cursor: pointer;
    position: relative;
    outline: none;
  }

  .tooltip {
    position: absolute;
    opacity: 0;
    visibility: 0;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    white-space: nowrap;
    font: var(--tooltip-font-size) var(--tooltip-font-family);
    color: var(--tootip-text-color);
    background: var(--tooltip-bg);
    padding: var(--tooltip-padding-y) var(--tooltip-padding-x);
    border-radius: var(--toolptip-border-radius);
    pointer-events: none;
    transition: all var(--tooltip-transition-duration)
      cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }

  .tooltip::before {
    content: attr(data-text-initial);
  }

  .tooltip::after {
    content: "";
    position: absolute;
    bottom: calc(var(--tooltip-padding-y) / 2 * -1);
    width: var(--tooltip-padding-y);
    height: var(--tooltip-padding-y);
    background: inherit;
    left: 50%;
    transform: translateX(-50%) rotate(45deg);
    z-index: -999;
    pointer-events: none;
  }

  .copy svg {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  .checkmark {
    display: none;
  }

  /* actions */

  .copy:hover .tooltip,
  .copy:focus:not(:focus-visible) .tooltip {
    opacity: 1;
	z-index: 1000;
    visibility: visible;
    top: calc((100% + var(--tooltip-offset)) * -1);
  }

  .copy:focus:not(:focus-visible) .tooltip::before {
    content: attr(data-text-end);
  }

  .copy:focus:not(:focus-visible) .clipboard {
    display: none;
  }

  .copy:focus:not(:focus-visible) .checkmark {
    display: block;
  }

  .copy:hover,
  .copy:focus {
    background-color: var(--button-hover-bg);
  }

  .copy:active {
    outline: var(--button-outline-width) solid var(--button-outline-color);
  }

  .copy:hover svg {
    color: var(--button-hover-text-color);
  }

  @keyframes shine {
    0% {
      left: -100px;
    }

    60% {
      left: 100%;
    }

    to {
      left: 100%;
    }
  }
  /* button end */
  @media (max-width: 1024px) {
    h1 {
      font-size: 4rem;
    }
    .hero p {
      font-size: 1.25rem;
    }
  }

  @media (max-width: 768px) {
    .features-grid {
      grid-template-columns: 1fr;
    }
    h1 {
      font-size: 3rem;
    }
    .hero {
      padding: 4rem 1rem;
    }
  }
</style>
